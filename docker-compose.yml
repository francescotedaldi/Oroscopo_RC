version: '2'

services:

  nginx:
    build:
      context: .
      dockerfile: .docker/nginx.dockerfile
    links:
      - node1:node1
      - node2:node2
      - node3:node3
      - couchdb1:couchdb1
    depends_on:
      - node1
      - node2
      - node3
    ports:
      - "8080:80"
    networks:
      - app-network

  node1:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./src:/usr/src/app/src
      - ./node_modules:/usr/src/app/node_modules
    ports:
      - "3000"
    environment:
      - INSTANCE=node1
    networks:
      - app-network

  node2:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./src:/usr/src/app/src
      - ./node_modules:/usr/src/app/node_modules
    ports:
      - "3000"
    environment:
      - INSTANCE=node2
    networks:
      - app-network

  node3:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./src:/usr/src/app/src
      - ./node_modules:/usr/src/app/node_modules
    ports:
      - "3000"
    environment:
      - INSTANCE=node3
    networks:
      - app-network

  couchdb1:
    build:
      context: .
      dockerfile: database.dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./src:/usr/src/app/src
      - ./node_modules:/usr/src/app/node_modules
    ports:
      - "3000"
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
